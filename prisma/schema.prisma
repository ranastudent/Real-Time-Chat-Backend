datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(uuid())
  phone     String    @unique
  name      String?
  devices   Device[]
  chats     ChatParticipant[]
  messages  Message[]
  createdAt DateTime  @default(now())
}

model Device {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  deviceId  String   @unique
  jwtToken  String?
  createdAt DateTime @default(now())
}

model Chat {
  id          String             @id @default(uuid())
  isGroup     Boolean            @default(false)
  title       String?
  createdBy   String
  participants ChatParticipant[]
  messages    Message[]
  settings    GroupSettings?
  createdAt   DateTime           @default(now())
}

model GroupSettings {
  chatId                   String @id
  chat                     Chat   @relation(fields: [chatId], references: [id])
  allowEveryonePost        Boolean @default(true)
  allowEveryoneAddMember   Boolean @default(false)
  restrictedPost           Boolean @default(false)
}

model ChatParticipant {
  id        String   @id @default(uuid())
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  role      String   @default("member") // member | admin | owner
  joinedAt  DateTime @default(now())
  isMuted   Boolean  @default(false)
  isBanned  Boolean  @default(false)
}

model Message {
  id          String    @id @default(uuid())
  chat        Chat      @relation(fields: [chatId], references: [id])
  chatId      String
  sender      User      @relation(fields: [senderId], references: [id])
  senderId    String
  content     String
  contentType String    @default("text")
  createdAt   DateTime  @default(now())
}
